--- /usr/share/cinnamon/applets/window-list@cinnamon.org/applet.js	2013-11-25 19:35:13.000000000 +0000
+++ applet.js	2014-01-01 19:41:38.566206837 +0000
@@ -452,7 +452,11 @@
             if ( this.rightClickMenu.isOpen ) {
                 this.rightClickMenu.toggle();
             }
-            this._windowHandle(false);
+            if (event.get_click_count() == 2) {
+                this._windowHandle(false, true);
+            } else {
+                this._windowHandle(false, false);
+            }
         } else if (Cinnamon.get_event_state(event) & Clutter.ModifierType.BUTTON2_MASK) {
             this.metaWindow.delete(global.get_current_time());
         } else if (Cinnamon.get_event_state(event) & Clutter.ModifierType.BUTTON3_MASK) {
@@ -461,15 +465,42 @@
         }   
     },
 
-    _windowHandle: function(fromDrag){
-        if ( this.metaWindow.has_focus() ) {
+    _windowHandle: function(fromDrag, doubleClick){
+        if (doubleClick) {
+            if ( this.metaWindow == this.lastMetaWindow) {
+                if ( this.lastMetaWindowMaximized ) {
+                    // need to minimize
+                    this.metaWindow.unmaximize(Meta.MaximizeFlags.HORIZONTAL | Meta.MaximizeFlags.VERTICAL);
+                    this.metaWindow.minimize(global.get_current_time());
+                    this.actor.remove_style_pseudo_class('focus');
+                } else {
+                    // to maximize
+                    if (this.metaWindow.minimized) {
+                        this.metaWindow.unminimize(global.get_current_time());
+                    }
+                    this.metaWindow.maximize(Meta.MaximizeFlags.HORIZONTAL | Meta.MaximizeFlags.VERTICAL);
+                    this.metaWindow.activate(global.get_current_time());
+                    this.actor.add_style_pseudo_class('focus');
+                }
+            }
+            this.lastMetaWindow = null;
+            this.lastMetaWindowMaximized = false;
+        } else if ( this.metaWindow.has_focus() ) {
             if (fromDrag){
                 return;
             }
-            this.metaWindow.minimize(global.get_current_time());
-            this.actor.remove_style_pseudo_class('focus');
+            this.lastMetaWindow = this.metaWindow;
+            this.lastMetaWindowMaximized = this.metaWindow.get_maximized();
+            if ( this.metaWindow.get_maximized() ) {
+                this.metaWindow.unmaximize(Meta.MaximizeFlags.HORIZONTAL | Meta.MaximizeFlags.VERTICAL);
+            } else {
+                this.metaWindow.minimize(global.get_current_time());
+                this.actor.remove_style_pseudo_class('focus');
+            }
         }
         else {
+	    this.lastMetaWindow = this.metaWindow;
+	    this.lastMetaWindowMaximized = this.metaWindow.get_maximized() && !this.metaWindow.minimized;
             if (this.metaWindow.minimized) {
                 this.metaWindow.unminimize(global.get_current_time()); 
             }
@@ -509,7 +540,7 @@
             }
         }
         if (time > (this._applet.dragEnterTime + 300)) {
-            this._windowHandle(true);
+            this._windowHandle(true, false);
         }
         return DND.DragMotionResult.NO_DROP;
     },
