# TestMenu.txt
# Default configuration file for the program "myGtkMenu"
# Usage: myGtkMenu MenuDescriptionFilename
#
# Keywords are used to identify the type of line. One keyword per line. The
# 7 keywords are:
#
# "menupos="
# "item="
# "cmd="
# "icon="
# "separator"
# "submenu="
# "iconsize="
#
#"Item=" must be followed by "cmd=" which must, in turn, be followed by "icon=".
#
# "Submenu" must be followed by "icon=" (line indented).
# All menu entries in this submenu must be indented using the <tab> character.
# The first line that is not indented with the same number of <tab>s signals
# the end of this submenu. Submenus can, of course, be nested.
#
# Item denotes the text to show in the menu. An underscore ("_") indicates
# the mnemonic for the menu item. Cmd denotes the command to run.
# Icon denotes a image to show in the menu. If you do not want an image,
# use the entry "icon=NULL". Submenu denotes the text to show
# in the menu listing. Separator is just that - a line in the menu.
# Iconsize changes the dimensions of the image used for succeeding menu items.
# MenuPos is an optional line to force the menu to open at a given x-y
# position (the program xev can help you find coordinates - see its man page).
# If "menupos=" is missing, the menu is shown at the mouse cursor position.
# Lines are limited to 200 characters. The character "#" marks the
# beginning of a comment (ignored by myGtkMenu). Blank lines are ignored.
#
#   |--------------------------------------------------------------------|
#   | If an error is found in the file, the rest of the file is ignored. |
#   |--------------------------------------------------------------------|
#
# The text that follows "cmd=" must be a legal (error free) command.
# If the command will not work when independently run on a terminal window,
# it will not work from myGtkMenu.
#
# To debug the operation of myGtkMenu on MenuDescriptionFilename,
# run "myGtkMenu MenuDescriptionFilename" from a command prompt
# (ie terminal window). When in doubt, enter the complete pathname of
# the files: "/PATH/myGtkMenu /PATH/MenuDescriptionFilename" where
# "/PATH/" is the directory where the files are located.
#
# Typically, one would run myGtkMenu from an icon on a panel or an
# icon on the desktop. (In GNOME, launchers are designed to do this.)
# Note that you are not limited to one menu. Make several launchers and
# operate them with different MenuDescriptionFilename.


#      ............... Beginning of menu ...............

#MenuPosition = 10 10 # Optional

iconsize = 24

item = -  -  -  Menu  -  -  -
cmd = " "
icon = NULL

SEPARATOR

Submenu = _SU        # see man consolehelper

	icon = /usr/share/icons/gnome-colors-common/24x24/apps/gksu-root-terminal.png

	item=_Nautilus
	cmd= gksu nautilus
	icon=/usr/share/icons/gnome/24x24/apps/file-manager.png

	item = _Gedit
	cmd = gksu gedit
	icon = /usr/share/icons/gnome/24x24/apps/text-editor.png

	SEPARATOR

	item = grub
	cmd = gksu gedit /etc/default/grub
	icon = /usr/share/icons/gnome/24x24/apps/text-editor.png
	
	item = fstab
	cmd = gksu gedit /etc/fstab
	icon = /usr/share/icons/gnome/24x24/apps/text-editor.png

SEPARATOR

item = _refresh the package index
cmd = gksu apt-get update
icon = /usr/share/icons/gnome/24x24/actions/reload.png # Icons can come from any directory

item = root _terminal
cmd = gksu gnome-terminal
icon = /usr/share/icons/gnome-colors-common/24x24/apps/terminal.png

item = _calculator
cmd = gcalctool
icon = /usr/share/icons/gnome/24x24/apps/calc.png

item = tomboy _notes
cmd = tomboy --search
icon = /usr/share/icons/gnome-colors-common/24x24/apps/tomboy-note.png

#iconsize = 32

SEPARATOR

item = _edit this menu
cmd = gedit "/home/karlitos/.local/share/cinnamon/applets/gtkMenu@karlitos.net/gtkmenu/menu.txt"
icon = /usr/share/icons/gnome/24x24/apps/text-editor.png
